---
import HeaderImage from '$components/HeaderImage.svelte';
import HeaderLogo from '$components/HeaderLogo.svelte';
import BannerNav from '$components/BannerNav.svelte';
import StateCookieToggleBtn from '$components/StateCookieToggleBtn.svelte';
import { STATE_COOKIE_VALUES } from '$utils/stateCookie';


interface Props {
  bannerNav: {
    ariaLabel: string;
    tiles: Array<{
      href: string;
      icon: string;
      text: string;
    }>
  },
  state: string,
};

const { bannerNav, state } = Astro.props;
const { ariaLabel, tiles } = bannerNav;
---

<div class="hero flex flex-v vh-4-10">

  <header class="header flex-center flex flex-v">

    <HeaderImage position={STATE_COOKIE_VALUES.indexOf(state)} total={STATE_COOKIE_VALUES.length} />

    <HeaderLogo  />

    <div class="toggle-state-wrapper">
      {STATE_COOKIE_VALUES.map(state => <StateCookieToggleBtn state={state} client:load />)}
    </div>

  </header>

  <BannerNav ariaLabel={ariaLabel} tiles={tiles} client:load />

</div>


<style lang="scss">
  @import './src/styles/vars';

  .hero {
    overflow: hidden;
    justify-content: space-between;
    max-height: (1.5rem * 26);
    position: relative;
    width: 100%;
    padding: 0;
    flex-shrink: 2;
    flex-grow: .5;

    @media only screen and (max-height: (calc(600px/$base-px) * 1em)) {
      flex-basis: 100%;
    }
  }

  .header {
    position: relative;

    // btm line
    &:before {
      content: '';
      z-index: 1;
      position: absolute;
      display: block;
      bottom: -1px;
      width: 100%;
      max-width: 1080px;
      height: 2px;
      opacity: .7;
      background-image: -webkit-linear-gradient(left, rgba(255, 255, 255, 0) 0%,rgba(255, 255, 255, 1) 25%, rgb(255, 255, 255, 1) 75%, rgba(255, 255, 255, 0) 100%);
    }
  }

  .toggle-state-wrapper {
    z-index: 1;
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: space-between;
    min-width: 300px;
  }
</style>